/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodbanksystem;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shano
 */
public class reqforblood extends javax.swing.JFrame {

    /**
     * Creates new form reqforblood
     */
    public reqforblood() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfbloodgroup = new javax.swing.JTextField();
        viewbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        tfdonorid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfphonenumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfrecipientid = new javax.swing.JTextField();
        savebtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        tfunit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(180, 0, 1010, 714));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 630, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Request for Blood");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Required Blood Group:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));
        getContentPane().add(tfbloodgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 530, -1));

        viewbtn.setText("View Donors");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });
        getContentPane().add(viewbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 130, -1, -1));

        studTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "FName", "LName", "Phone number", "Blood Group", "Gender", "Units"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(studTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 660, 270));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Choose Donor ID:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));
        getContentPane().add(tfdonorid, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 164, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 530, -1, -1));

        tfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfnameActionPerformed(evt);
            }
        });
        getContentPane().add(tfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, 164, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Phone:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 580, -1, -1));
        getContentPane().add(tfphonenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 580, 164, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Your Recipient ID is:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, 230, -1));
        getContentPane().add(tfrecipientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 170, -1));

        savebtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        savebtn.setText("Save");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        getContentPane().add(savebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 630, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Units Required:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 630, -1, -1));
        getContentPane().add(tfunit, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 630, 153, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shano\\Documents\\NetBeansProjects\\BloodBankSystem\\src\\bloodbanksystem\\icons\\menu.gif")); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
		 mainp su = new mainp();
		su.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        // TODO add your handling code here:
        String bloodgroup = tfbloodgroup.getText();
        
       try{
             Conn conn = new Conn();
             
            String sql= "select * from donorrr where bloodgroup ='"+bloodgroup+"'";
            PreparedStatement st = conn.c.prepareStatement(sql);
            ResultSet rs= conn.s.executeQuery(sql);
            DefaultTableModel tm=(DefaultTableModel)studTable.getModel();
            tm.setRowCount(0);
            while(rs.next()){
            Object o[]= {rs.getInt("id"),rs.getString("firstname"),rs.getString("lastname"),rs.getString("phonenumber"),rs.getString("bloodgroup"),rs.getString("gender"), rs.getInt("units")};
            tm.addRow(o);
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_viewbtnActionPerformed

    private void tfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfnameActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        // TODO add your handling code here:
       String donorIdText = tfdonorid.getText();
    String name = tfname.getText();
    String phoneNumber = tfphonenumber.getText();
    String bloodGroup = tfbloodgroup.getText();
    String unitText = tfunit.getText();

    // Check for null or empty values
    if (donorIdText.isEmpty() || name.isEmpty() || phoneNumber.isEmpty() || bloodGroup.isEmpty() || unitText.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
        return;
    }

    // Phone number validation using regular expression
    String phoneNumberRegex = "^[0-9]+$";
    if (!phoneNumber.matches(phoneNumberRegex)) {
        JOptionPane.showMessageDialog(null, "Invalid phone number. Please enter only numeric digits.");
        return; // Stop further execution if the phone number is invalid
    }

    try {
        int donorId = Integer.parseInt(donorIdText);
        int units = Integer.parseInt(unitText);

        // Check if the donor ID exists in the donorr table
        Conn con = new Conn();
        String donorQuery = "SELECT * FROM donorrr WHERE id = ?";
        PreparedStatement donorSt = con.c.prepareStatement(donorQuery);
        donorSt.setInt(1, donorId);
        ResultSet donorRs = donorSt.executeQuery();

        if (!donorRs.next()) {
            JOptionPane.showMessageDialog(null, "Donor ID does not exist in the donorrr table.");
            return; // Stop further execution if the donor ID does not exist
        }

          int dunits = donorRs.getInt("units");
//
//         Check if requested units are greater than donor units
//        if (units > dunits) {
//            JOptionPane.showMessageDialog(null, "Requested units exceed donor's available units.");
//            return; // Stop further execution if requested units exceed donor's units
//        }
        
        // Continue with saving recipient information
        String recipientQuery = "INSERT INTO recipient(name, phone, donorid, units, bloodgroup) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement st = con.c.prepareStatement(recipientQuery);
        
        st.setString(1, name);
        st.setString(2, phoneNumber);
        st.setInt(3, donorId);
        st.setInt(4, units);
        st.setString(5, bloodGroup);

        int i = st.executeUpdate();
        if (i > 0) {
            JOptionPane.showMessageDialog(null, "Recipient Added Successfully.");

            ResultSet rs;
                rs = con.s.executeQuery("select * from recipient where name = '"+name+"'");
                    if(rs.next()){
                        tfrecipientid.setText(rs.getString(1));
                    }
                    
                int donorid = parseInt(tfdonorid.getText());
                int runits = parseInt(tfunit.getText()); 

                String bloodgroup = null;
               
                rs = con.s.executeQuery("select * from donorrr where id = '"+donorid+"'");
                                if(rs.next())
                                {
                                    bloodgroup = rs.getString(5);
                                dunits = rs.getInt(7);
                                }
                
                if(runits == dunits)
                {
                    String q11 = "update donorrr set units =" + 0 + " where id = '" + donorid + "'";
                                 con.s.executeUpdate(q11);
                                
	    			JOptionPane.showMessageDialog(null, "Donor Nulled Successfully");
                                
                   String q1 = "update bank set units = units - " + runits + " where bloodgroup = '" + bloodgroup + "'";
                                 con.s.executeUpdate(q1);
                                
	    			JOptionPane.showMessageDialog(null, "Bank Updated Successfully");
//                   String sql2 = "DELETE FROM `donorrr` WHERE id='"+donorid+"'";
//                    PreparedStatement st2= con.c.prepareStatement(sql2);
//                    st2.executeUpdate();
//                    JOptionPane.showMessageDialog(	null, "Donor has been removed");
//                    
//                    String q11 = "update bank set units = units - " + runits + " where bloodgroup = '" + bloodgroup + "'";
//                                 con.s.executeUpdate(q11);
//                                
//	    			JOptionPane.showMessageDialog(null, "Bank Updated Successfully");
                }
//                else if(runits > dunits)
//                {
//	    			JOptionPane.showMessageDialog(null, "Insufficient amount of units for selected donor.");
//                }
                else
                {
                    String q11 = "update donorrr set units = units - " + runits + " where id = '" + donorid + "'";
                                 con.s.executeUpdate(q11);
                                
	    			JOptionPane.showMessageDialog(null, "Donor Updated Successfully");
                                
                   String q1 = "update bank set units = units - " + runits + " where bloodgroup = '" + bloodgroup + "'";
                                 con.s.executeUpdate(q1);
                                
	    			JOptionPane.showMessageDialog(null, "Bank Updated Successfully");
                }
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid numeric input for Donor ID or Units.");
    } catch (Exception e) {
        System.out.println(e);
    }
    }//GEN-LAST:event_savebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reqforblood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reqforblood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reqforblood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reqforblood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reqforblood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton savebtn;
    private javax.swing.JTable studTable;
    private javax.swing.JTextField tfbloodgroup;
    private javax.swing.JTextField tfdonorid;
    private javax.swing.JTextField tfname;
    private javax.swing.JTextField tfphonenumber;
    private javax.swing.JTextField tfrecipientid;
    private javax.swing.JTextField tfunit;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables
}
